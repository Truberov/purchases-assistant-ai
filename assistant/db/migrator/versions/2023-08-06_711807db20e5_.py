"""empty message

Revision ID: 711807db20e5
Revises: 
Create Date: 2023-08-06 18:50:13.352703

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '711807db20e5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('trip',
                    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'),
                              nullable=False),
                    sa.Column('dt_created', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('dt_updated', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('client_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('start_datetime', postgresql.TIMESTAMP(timezone=True), nullable=True),
                    sa.Column('end_datetime', postgresql.TIMESTAMP(timezone=True), nullable=True),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk__trip')),
                    sa.UniqueConstraint('id', name=op.f('uq__trip__id'))
                    )
    op.create_table('accommodation',
                    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'),
                              nullable=False),
                    sa.Column('dt_created', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('dt_updated', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('trip_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('hotel', postgresql.JSON(astext_type=sa.Text()), nullable=False),
                    sa.Column('link', postgresql.JSON(astext_type=sa.Text()), nullable=False),
                    sa.ForeignKeyConstraint(['trip_id'], ['trip.id'], name=op.f('fk__accommodation__trip_id__trip'),
                                            onupdate='SET NULL', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk__accommodation')),
                    sa.UniqueConstraint('id', name=op.f('uq__accommodation__id'))
                    )
    op.create_table('ticket',
                    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'),
                              nullable=False),
                    sa.Column('dt_created', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('dt_updated', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('trip_id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('partner', sa.TEXT(), nullable=False),
                    sa.Column('from_id', sa.TEXT(), nullable=False),
                    sa.Column('to_id', sa.TEXT(), nullable=False),
                    sa.Column('forward', sa.TEXT(), nullable=False),
                    sa.Column('backward', sa.TEXT(), nullable=True),
                    sa.Column('ticket_class', sa.TEXT(), nullable=False),
                    sa.Column('tariff', postgresql.JSON(astext_type=sa.Text()), nullable=False),
                    sa.ForeignKeyConstraint(['trip_id'], ['trip.id'], name=op.f('fk__ticket__trip_id__trip'),
                                            onupdate='SET NULL', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk__ticket')),
                    sa.UniqueConstraint('id', name=op.f('uq__ticket__id'))
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ticket')
    op.drop_table('accommodation')
    op.drop_table('trip')
    # ### end Alembic commands ###
